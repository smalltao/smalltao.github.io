---
layout: post
title:  "vim 使用"
subtitle:   "vim 快捷键使用说明"
author:     "LiTao"
date:   2017-09-08 19:13:33 +0800
categories: nginx
catalog:    true
tags:
    - liux
---

## 1. 进入`vim`

1. vim filename 打开或者新建一个文件;并将光标置于第一行首
2. vim +n filename 打开文件并将光标置于第n行行首
3. vim + filename 打开文件并将光标置于最后一行行首
4. vim -r filename 在上次征用vi编辑时发生崩溃，恢复文件
5. vim file1~filen 打开多个文件;以此编辑

## 2. 模式

1. 命令行模式（command mode）控制屏幕光标的移动、字符、字或行的删除，移动复制某区域或进入insert mode ，或last line mode
2. 插入模式（Insert mode）： 只有在插入模式才可以做文字输入，按【ESC】返回到命令行模式
3. 底行模式（last line mode）：将文件保存或退出vim，也可以设置编辑环境，如寻找字符串，列出行号等

## 2.1 命令行模式

### 2.1.1移动光标

按键 | 说明
--- | ---
k、j、h、l | 功能分别等同于上下左右箭头键
Ctrl+b | 在文件中向上移动一页 （相当于PageUp键）
Ctrl+f | 在文件中向下移动一页 （相当于PageDown键）
Ctrl+u | 屏幕往后移动半页
Ctrl+d |　屏幕往前移动半页
H | 将光标移动到屏幕的最上行
nH | 将光标移动到屏幕的第 n 行 （如 2H 将光标移动到屏幕的第 2 行 ）
M | 将光标移动到屏幕的中间 （Middle）
L | 将光标移动到屏幕的最下行 （Lowest）
nL | 将光标移动到屏幕的倒数第 n 行 （如 3L： 将光标移动到屏幕的倒数第 3 行 ）
w | 在指定行内右移光标，到下一个字的开头
e | 在指定行内右移光标，到下一个字的末尾
b | 在指定行内左移光标，到前一个字的开头
0 | 数字0 ，左移光标，到本行的开头
G | 移动光标到文章的最后
nG | 光标移动到文章的第 n 行 （如 8G： 移动到文章的第 8 行 ）
$ | 右移光标，到本行的末尾
. | 移动光标，到本喊得第一个非空字符

### 2.1.2 替换和删除

按键 | 说明
--- | ---
rc | 用 c 替换光标所指向的当前字符串
nrc | 用 c 替换光标所执行的前 n 个字符串 （如 5rc： 用 c 替换光标所指向的前 5 个字符）
x | 删除光标所在位置后面的一个字符
nx | 删除光标所在位置后面的 n 个字符（如 3x： 删除光标所在位置后面的 3 个字符）
X | 大写的X ， 删除光标所在位置的前面的一个字符
nX | 删除光标所在位置的前面的 n 个字符（如 3X: 删除光标所在位置前面的 3 个字符）
dd | 删除光标所在行，并去除空隙
ndd | 从光标所在行开始删除 n 行内容，并去除空隙 （3dd : 删除 3 行内容 并去除空隙）

###  2.1.3 搜索字符串

按键 | 说明
--- | ---
/str1 | 正向搜索字符串 str1
n | 继续搜索，找出 str1 下次出现的位置
?str2 | 反向搜索字符串 str2

### 2.1.4 撤销和重复

按键 | 说明
--- | ---
u | 撤销前一条命令的结果
. | 重复最后一条修改正文的命令

### 2.1.5 文本选中

按键 | 说明
--- | ---
v | 字符选中命令
V | 行选中命令

## 2.2 插入模式

### 2.2.1 进入插入模式

按键 | 说明
--- | ---
i | 在光标左侧输入正文
a | 在光标右侧输入正文
o | 在光标所在行的下一行增加新行
O | 在光标所在行的上一行增加新行
I | 在光标所在行的开头输入正文
A | 在光标所在行的末尾输入正文
ESC Ctrl+[ | 退出插入模式

## 2.3 底行模式
### 2.3.1 退出命令

按键 | 说明
--- | ---
:q | 在未修改的情况下退出
:q! | 放弃所有修改，退出编辑程序

### 2.3.2 行号和文件保存

按键 | 说明
--- | ---
:n |将光标移动到第 n 行
set nu | 显示行号
:set nonu | 取消行号显示

数值用来指定绝对行号，字符“.”用来表示光标所在行的行号，字符“$” 表示正文的最后一行的行号

按键 | 说明
--- | ---
: .+5 | 将光标移动到当前行之后的第 5 行
: $ | 将光标移动到正文的最后一行

在底行模式下，允许从文件中读取正文，或将正文写入文件

按键 | 说明
--- | ---
:w | 将编辑的内容写入原始文件，用来保存编辑的中间结果
:wq | 将编辑的内容写入原始文件并退出编辑程序（相当于 ZZ 命令）
:w file | 将编辑的内容写入 file 文件，保持原有文件的内容不变
:a,bw file | 将 a 行至第 b 行的内容写入 file 文件（如：1,.w file 将第 1 行至当前行写入 file 文件）
:r file | 读取 file 文件的内容，插入当前光标所在行的后面
:f file | 将当前文件重命名为file

### 2.3.3 字符串搜索

按键 | 说明
--- | ---
:/str/ | 正向搜索，将光标移动到下一个包含字符串 str 的行
:?str? | 反向搜索，将光标移动到上一个包含字符串 str 的行

### 2.3.4 正文替换

按键 | 说明
--- | ---
:s/str1/str2/ | 用字符串 str2 替换行中首次出现的字符串 str1
:s/str1/str2/g | 用字符串 str2 替换行中所有出现的字符串 str1
:.,$ s/str1/str2/g | 用字符串 str2 替换正文当前行到末尾所有出现的字符串 str1
:1,$ s/str1/str2/g | 用字符串 str2 替换正文中所有出现的字符 str1
:g/str1/s//str2/g | 功能同上

### 2.3.5 删除正文

按键 | 说明
--- | ---
:d | 删除光标所在行
:3d | 删除第三行
:.,$d | 删除当前行至正文的末尾
:/str1/,/str2/d | 删除从字符串 str1 到 str2 的所有行

### 2.3.6 恢复文件
vi 在编辑某个文件时，会另外生成一个临时文件，这个文件的名称通常以 . 开头，并以 .swp 结尾。
vi 在正常退出时，该文件被删除，若意外退出，而没有保存文件的最新修改内容，则可以使用恢复命令，也可以在启动 vi 时利用 -r 选项。

按键 | 说明
--- | ---
:recover | 恢复文件

### 2.3.7 选项设置
为控制不同的编辑功能，vi 提供了很多内部选项。利用 :set 命令可以设置选项。基本语法为：

按键 | 说明
--- | ---
:set option | 设置选项 option
:set option | 设置选项 option

常见的功能选项包括：

功能 | 说明
--- | ---
autoindent | 自动缩进
ignorecase |忽略字母大小写
number | 显示正文行号
ruler | 屏幕底部显示光标所在行、列的位置
tabstop | 设置按 Tab 键跳过的空格数 ，例如 :set tabstop=n, n 默认值是 8
mk | 将选项保存到当前目录的 .exrc 文件中

### 2.3.8 shell切换
在编辑正文时，利用 vi 底行模式下提供的shell 切换命令，无须退出 vi 即可执行Linux 命令

```
: ! command 执行完shell 命令 comand 后回到vi

```
另外，在命令模式下，键入K ，可命令 vi 查找光标所在单词的手册页，相当于运行man命令
